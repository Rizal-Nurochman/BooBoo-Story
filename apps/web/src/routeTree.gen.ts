/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as IndexRouteImport } from './routes/index'
import { Route as UserProfileRouteImport } from './routes/user/profile'
import { Route as UserMyStoriesRouteImport } from './routes/user/my-stories'
import { Route as UserBookmarksRouteImport } from './routes/user/bookmarks'
import { Route as UserAchievementsRouteImport } from './routes/user/achievements'
import { Route as DemoTanstackQueryRouteImport } from './routes/demo.tanstack-query'
import { Route as CreatorsDashboardRouteImport } from './routes/creators/dashboard'
import { Route as AuthAuthLayoutRouteImport } from './routes/auth/_authLayout'
import { Route as AppAppLayoutRouteImport } from './routes/app/_appLayout'
import { Route as ApiDemoNamesRouteImport } from './routes/api.demo-names'
import { Route as ApiAiRouteImport } from './routes/api/ai'
import { Route as DemoStartServerFuncsRouteImport } from './routes/demo.start.server-funcs'
import { Route as DemoStartApiRequestRouteImport } from './routes/demo.start.api-request'
import { Route as AuthAuthLayoutRegisterRouteImport } from './routes/auth/_authLayout/register'
import { Route as AuthAuthLayoutLoginRouteImport } from './routes/auth/_authLayout/login'
import { Route as AuthAuthLayoutForgotPasswordRouteImport } from './routes/auth/_authLayout/forgot-password'
import { Route as AuthAuthLayoutCreatorRouteImport } from './routes/auth/_authLayout/creator'
import { Route as AppAppLayoutBooksIndexRouteImport } from './routes/app/_appLayout/books/index'
import { Route as AppAppLayoutBooksCreateRouteImport } from './routes/app/_appLayout/books/create'

const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const UserProfileRoute = UserProfileRouteImport.update({
  id: '/user/profile',
  path: '/user/profile',
  getParentRoute: () => rootRouteImport,
} as any)
const UserMyStoriesRoute = UserMyStoriesRouteImport.update({
  id: '/user/my-stories',
  path: '/user/my-stories',
  getParentRoute: () => rootRouteImport,
} as any)
const UserBookmarksRoute = UserBookmarksRouteImport.update({
  id: '/user/bookmarks',
  path: '/user/bookmarks',
  getParentRoute: () => rootRouteImport,
} as any)
const UserAchievementsRoute = UserAchievementsRouteImport.update({
  id: '/user/achievements',
  path: '/user/achievements',
  getParentRoute: () => rootRouteImport,
} as any)
const DemoTanstackQueryRoute = DemoTanstackQueryRouteImport.update({
  id: '/demo/tanstack-query',
  path: '/demo/tanstack-query',
  getParentRoute: () => rootRouteImport,
} as any)
const CreatorsDashboardRoute = CreatorsDashboardRouteImport.update({
  id: '/creators/dashboard',
  path: '/creators/dashboard',
  getParentRoute: () => rootRouteImport,
} as any)
const AuthAuthLayoutRoute = AuthAuthLayoutRouteImport.update({
  id: '/_authLayout',
  getParentRoute: () => AuthRoute,
} as any)
const AppAppLayoutRoute = AppAppLayoutRouteImport.update({
  id: '/_appLayout',
  getParentRoute: () => AppRoute,
} as any)
const ApiDemoNamesRoute = ApiDemoNamesRouteImport.update({
  id: '/api/demo-names',
  path: '/api/demo-names',
  getParentRoute: () => rootRouteImport,
} as any)
const ApiAiRoute = ApiAiRouteImport.update({
  id: '/api/ai',
  path: '/api/ai',
  getParentRoute: () => rootRouteImport,
} as any)
const DemoStartServerFuncsRoute = DemoStartServerFuncsRouteImport.update({
  id: '/demo/start/server-funcs',
  path: '/demo/start/server-funcs',
  getParentRoute: () => rootRouteImport,
} as any)
const DemoStartApiRequestRoute = DemoStartApiRequestRouteImport.update({
  id: '/demo/start/api-request',
  path: '/demo/start/api-request',
  getParentRoute: () => rootRouteImport,
} as any)
const AuthAuthLayoutRegisterRoute = AuthAuthLayoutRegisterRouteImport.update({
  id: '/register',
  path: '/register',
  getParentRoute: () => AuthAuthLayoutRoute,
} as any)
const AuthAuthLayoutLoginRoute = AuthAuthLayoutLoginRouteImport.update({
  id: '/login',
  path: '/login',
  getParentRoute: () => AuthAuthLayoutRoute,
} as any)
const AuthAuthLayoutForgotPasswordRoute =
  AuthAuthLayoutForgotPasswordRouteImport.update({
    id: '/forgot-password',
    path: '/forgot-password',
    getParentRoute: () => AuthAuthLayoutRoute,
  } as any)
const AuthAuthLayoutCreatorRoute = AuthAuthLayoutCreatorRouteImport.update({
  id: '/creator',
  path: '/creator',
  getParentRoute: () => AuthAuthLayoutRoute,
} as any)
const AppAppLayoutBooksIndexRoute = AppAppLayoutBooksIndexRouteImport.update({
  id: '/books/',
  path: '/books/',
  getParentRoute: () => AppAppLayoutRoute,
} as any)
const AppAppLayoutBooksCreateRoute = AppAppLayoutBooksCreateRouteImport.update({
  id: '/books/create',
  path: '/books/create',
  getParentRoute: () => AppAppLayoutRoute,
} as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/api/ai': typeof ApiAiRoute
  '/api/demo-names': typeof ApiDemoNamesRoute
  '/app': typeof AppAppLayoutRouteWithChildren
  '/auth': typeof AuthAuthLayoutRouteWithChildren
  '/creators/dashboard': typeof CreatorsDashboardRoute
  '/demo/tanstack-query': typeof DemoTanstackQueryRoute
  '/user/achievements': typeof UserAchievementsRoute
  '/user/bookmarks': typeof UserBookmarksRoute
  '/user/my-stories': typeof UserMyStoriesRoute
  '/user/profile': typeof UserProfileRoute
  '/auth/creator': typeof AuthAuthLayoutCreatorRoute
  '/auth/forgot-password': typeof AuthAuthLayoutForgotPasswordRoute
  '/auth/login': typeof AuthAuthLayoutLoginRoute
  '/auth/register': typeof AuthAuthLayoutRegisterRoute
  '/demo/start/api-request': typeof DemoStartApiRequestRoute
  '/demo/start/server-funcs': typeof DemoStartServerFuncsRoute
  '/app/books/create': typeof AppAppLayoutBooksCreateRoute
  '/app/books': typeof AppAppLayoutBooksIndexRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/api/ai': typeof ApiAiRoute
  '/api/demo-names': typeof ApiDemoNamesRoute
  '/app': typeof AppAppLayoutRouteWithChildren
  '/auth': typeof AuthAuthLayoutRouteWithChildren
  '/creators/dashboard': typeof CreatorsDashboardRoute
  '/demo/tanstack-query': typeof DemoTanstackQueryRoute
  '/user/achievements': typeof UserAchievementsRoute
  '/user/bookmarks': typeof UserBookmarksRoute
  '/user/my-stories': typeof UserMyStoriesRoute
  '/user/profile': typeof UserProfileRoute
  '/auth/creator': typeof AuthAuthLayoutCreatorRoute
  '/auth/forgot-password': typeof AuthAuthLayoutForgotPasswordRoute
  '/auth/login': typeof AuthAuthLayoutLoginRoute
  '/auth/register': typeof AuthAuthLayoutRegisterRoute
  '/demo/start/api-request': typeof DemoStartApiRequestRoute
  '/demo/start/server-funcs': typeof DemoStartServerFuncsRoute
  '/app/books/create': typeof AppAppLayoutBooksCreateRoute
  '/app/books': typeof AppAppLayoutBooksIndexRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/api/ai': typeof ApiAiRoute
  '/api/demo-names': typeof ApiDemoNamesRoute
  '/app/_appLayout': typeof AppAppLayoutRouteWithChildren
  '/auth/_authLayout': typeof AuthAuthLayoutRouteWithChildren
  '/creators/dashboard': typeof CreatorsDashboardRoute
  '/demo/tanstack-query': typeof DemoTanstackQueryRoute
  '/user/achievements': typeof UserAchievementsRoute
  '/user/bookmarks': typeof UserBookmarksRoute
  '/user/my-stories': typeof UserMyStoriesRoute
  '/user/profile': typeof UserProfileRoute
  '/auth/_authLayout/creator': typeof AuthAuthLayoutCreatorRoute
  '/auth/_authLayout/forgot-password': typeof AuthAuthLayoutForgotPasswordRoute
  '/auth/_authLayout/login': typeof AuthAuthLayoutLoginRoute
  '/auth/_authLayout/register': typeof AuthAuthLayoutRegisterRoute
  '/demo/start/api-request': typeof DemoStartApiRequestRoute
  '/demo/start/server-funcs': typeof DemoStartServerFuncsRoute
  '/app/_appLayout/books/create': typeof AppAppLayoutBooksCreateRoute
  '/app/_appLayout/books/': typeof AppAppLayoutBooksIndexRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/api/ai'
    | '/api/demo-names'
    | '/app'
    | '/auth'
    | '/creators/dashboard'
    | '/demo/tanstack-query'
    | '/user/achievements'
    | '/user/bookmarks'
    | '/user/my-stories'
    | '/user/profile'
    | '/auth/creator'
    | '/auth/forgot-password'
    | '/auth/login'
    | '/auth/register'
    | '/demo/start/api-request'
    | '/demo/start/server-funcs'
    | '/app/books/create'
    | '/app/books'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/api/ai'
    | '/api/demo-names'
    | '/app'
    | '/auth'
    | '/creators/dashboard'
    | '/demo/tanstack-query'
    | '/user/achievements'
    | '/user/bookmarks'
    | '/user/my-stories'
    | '/user/profile'
    | '/auth/creator'
    | '/auth/forgot-password'
    | '/auth/login'
    | '/auth/register'
    | '/demo/start/api-request'
    | '/demo/start/server-funcs'
    | '/app/books/create'
    | '/app/books'
  id:
    | '__root__'
    | '/'
    | '/api/ai'
    | '/api/demo-names'
    | '/app/_appLayout'
    | '/auth/_authLayout'
    | '/creators/dashboard'
    | '/demo/tanstack-query'
    | '/user/achievements'
    | '/user/bookmarks'
    | '/user/my-stories'
    | '/user/profile'
    | '/auth/_authLayout/creator'
    | '/auth/_authLayout/forgot-password'
    | '/auth/_authLayout/login'
    | '/auth/_authLayout/register'
    | '/demo/start/api-request'
    | '/demo/start/server-funcs'
    | '/app/_appLayout/books/create'
    | '/app/_appLayout/books/'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  ApiAiRoute: typeof ApiAiRoute
  ApiDemoNamesRoute: typeof ApiDemoNamesRoute
  CreatorsDashboardRoute: typeof CreatorsDashboardRoute
  DemoTanstackQueryRoute: typeof DemoTanstackQueryRoute
  UserAchievementsRoute: typeof UserAchievementsRoute
  UserBookmarksRoute: typeof UserBookmarksRoute
  UserMyStoriesRoute: typeof UserMyStoriesRoute
  UserProfileRoute: typeof UserProfileRoute
  DemoStartApiRequestRoute: typeof DemoStartApiRequestRoute
  DemoStartServerFuncsRoute: typeof DemoStartServerFuncsRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/user/profile': {
      id: '/user/profile'
      path: '/user/profile'
      fullPath: '/user/profile'
      preLoaderRoute: typeof UserProfileRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/user/my-stories': {
      id: '/user/my-stories'
      path: '/user/my-stories'
      fullPath: '/user/my-stories'
      preLoaderRoute: typeof UserMyStoriesRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/user/bookmarks': {
      id: '/user/bookmarks'
      path: '/user/bookmarks'
      fullPath: '/user/bookmarks'
      preLoaderRoute: typeof UserBookmarksRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/user/achievements': {
      id: '/user/achievements'
      path: '/user/achievements'
      fullPath: '/user/achievements'
      preLoaderRoute: typeof UserAchievementsRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/demo/tanstack-query': {
      id: '/demo/tanstack-query'
      path: '/demo/tanstack-query'
      fullPath: '/demo/tanstack-query'
      preLoaderRoute: typeof DemoTanstackQueryRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/creators/dashboard': {
      id: '/creators/dashboard'
      path: '/creators/dashboard'
      fullPath: '/creators/dashboard'
      preLoaderRoute: typeof CreatorsDashboardRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/auth/_authLayout': {
      id: '/auth/_authLayout'
      path: ''
      fullPath: '/auth'
      preLoaderRoute: typeof AuthAuthLayoutRouteImport
      parentRoute: typeof AuthRoute
    }
    '/app/_appLayout': {
      id: '/app/_appLayout'
      path: ''
      fullPath: '/app'
      preLoaderRoute: typeof AppAppLayoutRouteImport
      parentRoute: typeof AppRoute
    }
    '/api/demo-names': {
      id: '/api/demo-names'
      path: '/api/demo-names'
      fullPath: '/api/demo-names'
      preLoaderRoute: typeof ApiDemoNamesRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/api/ai': {
      id: '/api/ai'
      path: '/api/ai'
      fullPath: '/api/ai'
      preLoaderRoute: typeof ApiAiRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/demo/start/server-funcs': {
      id: '/demo/start/server-funcs'
      path: '/demo/start/server-funcs'
      fullPath: '/demo/start/server-funcs'
      preLoaderRoute: typeof DemoStartServerFuncsRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/demo/start/api-request': {
      id: '/demo/start/api-request'
      path: '/demo/start/api-request'
      fullPath: '/demo/start/api-request'
      preLoaderRoute: typeof DemoStartApiRequestRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/auth/_authLayout/register': {
      id: '/auth/_authLayout/register'
      path: '/register'
      fullPath: '/auth/register'
      preLoaderRoute: typeof AuthAuthLayoutRegisterRouteImport
      parentRoute: typeof AuthAuthLayoutRoute
    }
    '/auth/_authLayout/login': {
      id: '/auth/_authLayout/login'
      path: '/login'
      fullPath: '/auth/login'
      preLoaderRoute: typeof AuthAuthLayoutLoginRouteImport
      parentRoute: typeof AuthAuthLayoutRoute
    }
    '/auth/_authLayout/forgot-password': {
      id: '/auth/_authLayout/forgot-password'
      path: '/forgot-password'
      fullPath: '/auth/forgot-password'
      preLoaderRoute: typeof AuthAuthLayoutForgotPasswordRouteImport
      parentRoute: typeof AuthAuthLayoutRoute
    }
    '/auth/_authLayout/creator': {
      id: '/auth/_authLayout/creator'
      path: '/creator'
      fullPath: '/auth/creator'
      preLoaderRoute: typeof AuthAuthLayoutCreatorRouteImport
      parentRoute: typeof AuthAuthLayoutRoute
    }
    '/app/_appLayout/books/': {
      id: '/app/_appLayout/books/'
      path: '/books'
      fullPath: '/app/books'
      preLoaderRoute: typeof AppAppLayoutBooksIndexRouteImport
      parentRoute: typeof AppAppLayoutRoute
    }
    '/app/_appLayout/books/create': {
      id: '/app/_appLayout/books/create'
      path: '/books/create'
      fullPath: '/app/books/create'
      preLoaderRoute: typeof AppAppLayoutBooksCreateRouteImport
      parentRoute: typeof AppAppLayoutRoute
    }
  }
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  ApiAiRoute: ApiAiRoute,
  ApiDemoNamesRoute: ApiDemoNamesRoute,
  CreatorsDashboardRoute: CreatorsDashboardRoute,
  DemoTanstackQueryRoute: DemoTanstackQueryRoute,
  UserAchievementsRoute: UserAchievementsRoute,
  UserBookmarksRoute: UserBookmarksRoute,
  UserMyStoriesRoute: UserMyStoriesRoute,
  UserProfileRoute: UserProfileRoute,
  DemoStartApiRequestRoute: DemoStartApiRequestRoute,
  DemoStartServerFuncsRoute: DemoStartServerFuncsRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

import type { getRouter } from './router.tsx'
import type { createStart } from '@tanstack/react-start'
declare module '@tanstack/react-start' {
  interface Register {
    router: Awaited<ReturnType<typeof getRouter>>
  }
}
