/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { createFileRoute } from '@tanstack/react-router'

import { Route as rootRouteImport } from './routes/__root'
import { Route as IndexRouteImport } from './routes/index'
import { Route as DemoTanstackQueryRouteImport } from './routes/demo.tanstack-query'
import { Route as AuthAuthLayoutRouteImport } from './routes/auth/_authLayout'
import { Route as ApiDemoNamesRouteImport } from './routes/api.demo-names'
import { Route as ApiAiRouteImport } from './routes/api/ai'
import { Route as DemoStartServerFuncsRouteImport } from './routes/demo.start.server-funcs'
import { Route as DemoStartApiRequestRouteImport } from './routes/demo.start.api-request'
import { Route as AuthAuthLayoutRegisterRouteImport } from './routes/auth/_authLayout/register'
import { Route as AuthAuthLayoutLoginRouteImport } from './routes/auth/_authLayout/login'
import { Route as AuthAuthLayoutForgotPasswordRouteImport } from './routes/auth/_authLayout/forgot-password'
import { Route as AuthAuthLayoutCreatorRouteImport } from './routes/auth/_authLayout/creator'

const AuthRouteImport = createFileRoute('/auth')()

const AuthRoute = AuthRouteImport.update({
  id: '/auth',
  path: '/auth',
  getParentRoute: () => rootRouteImport,
} as any)
const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const DemoTanstackQueryRoute = DemoTanstackQueryRouteImport.update({
  id: '/demo/tanstack-query',
  path: '/demo/tanstack-query',
  getParentRoute: () => rootRouteImport,
} as any)
const AuthAuthLayoutRoute = AuthAuthLayoutRouteImport.update({
  id: '/_authLayout',
  getParentRoute: () => AuthRoute,
} as any)
const ApiDemoNamesRoute = ApiDemoNamesRouteImport.update({
  id: '/api/demo-names',
  path: '/api/demo-names',
  getParentRoute: () => rootRouteImport,
} as any)
const ApiAiRoute = ApiAiRouteImport.update({
  id: '/api/ai',
  path: '/api/ai',
  getParentRoute: () => rootRouteImport,
} as any)
const DemoStartServerFuncsRoute = DemoStartServerFuncsRouteImport.update({
  id: '/demo/start/server-funcs',
  path: '/demo/start/server-funcs',
  getParentRoute: () => rootRouteImport,
} as any)
const DemoStartApiRequestRoute = DemoStartApiRequestRouteImport.update({
  id: '/demo/start/api-request',
  path: '/demo/start/api-request',
  getParentRoute: () => rootRouteImport,
} as any)
const AuthAuthLayoutRegisterRoute = AuthAuthLayoutRegisterRouteImport.update({
  id: '/register',
  path: '/register',
  getParentRoute: () => AuthAuthLayoutRoute,
} as any)
const AuthAuthLayoutLoginRoute = AuthAuthLayoutLoginRouteImport.update({
  id: '/login',
  path: '/login',
  getParentRoute: () => AuthAuthLayoutRoute,
} as any)
const AuthAuthLayoutForgotPasswordRoute =
  AuthAuthLayoutForgotPasswordRouteImport.update({
    id: '/forgot-password',
    path: '/forgot-password',
    getParentRoute: () => AuthAuthLayoutRoute,
  } as any)
const AuthAuthLayoutCreatorRoute = AuthAuthLayoutCreatorRouteImport.update({
  id: '/creator',
  path: '/creator',
  getParentRoute: () => AuthAuthLayoutRoute,
} as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/api/ai': typeof ApiAiRoute
  '/api/demo-names': typeof ApiDemoNamesRoute
  '/auth': typeof AuthAuthLayoutRouteWithChildren
  '/demo/tanstack-query': typeof DemoTanstackQueryRoute
  '/auth/creator': typeof AuthAuthLayoutCreatorRoute
  '/auth/forgot-password': typeof AuthAuthLayoutForgotPasswordRoute
  '/auth/login': typeof AuthAuthLayoutLoginRoute
  '/auth/register': typeof AuthAuthLayoutRegisterRoute
  '/demo/start/api-request': typeof DemoStartApiRequestRoute
  '/demo/start/server-funcs': typeof DemoStartServerFuncsRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/api/ai': typeof ApiAiRoute
  '/api/demo-names': typeof ApiDemoNamesRoute
  '/auth': typeof AuthAuthLayoutRouteWithChildren
  '/demo/tanstack-query': typeof DemoTanstackQueryRoute
  '/auth/creator': typeof AuthAuthLayoutCreatorRoute
  '/auth/forgot-password': typeof AuthAuthLayoutForgotPasswordRoute
  '/auth/login': typeof AuthAuthLayoutLoginRoute
  '/auth/register': typeof AuthAuthLayoutRegisterRoute
  '/demo/start/api-request': typeof DemoStartApiRequestRoute
  '/demo/start/server-funcs': typeof DemoStartServerFuncsRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/api/ai': typeof ApiAiRoute
  '/api/demo-names': typeof ApiDemoNamesRoute
  '/auth': typeof AuthRouteWithChildren
  '/auth/_authLayout': typeof AuthAuthLayoutRouteWithChildren
  '/demo/tanstack-query': typeof DemoTanstackQueryRoute
  '/auth/_authLayout/creator': typeof AuthAuthLayoutCreatorRoute
  '/auth/_authLayout/forgot-password': typeof AuthAuthLayoutForgotPasswordRoute
  '/auth/_authLayout/login': typeof AuthAuthLayoutLoginRoute
  '/auth/_authLayout/register': typeof AuthAuthLayoutRegisterRoute
  '/demo/start/api-request': typeof DemoStartApiRequestRoute
  '/demo/start/server-funcs': typeof DemoStartServerFuncsRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/api/ai'
    | '/api/demo-names'
    | '/auth'
    | '/demo/tanstack-query'
    | '/auth/creator'
    | '/auth/forgot-password'
    | '/auth/login'
    | '/auth/register'
    | '/demo/start/api-request'
    | '/demo/start/server-funcs'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/api/ai'
    | '/api/demo-names'
    | '/auth'
    | '/demo/tanstack-query'
    | '/auth/creator'
    | '/auth/forgot-password'
    | '/auth/login'
    | '/auth/register'
    | '/demo/start/api-request'
    | '/demo/start/server-funcs'
  id:
    | '__root__'
    | '/'
    | '/api/ai'
    | '/api/demo-names'
    | '/auth'
    | '/auth/_authLayout'
    | '/demo/tanstack-query'
    | '/auth/_authLayout/creator'
    | '/auth/_authLayout/forgot-password'
    | '/auth/_authLayout/login'
    | '/auth/_authLayout/register'
    | '/demo/start/api-request'
    | '/demo/start/server-funcs'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  ApiAiRoute: typeof ApiAiRoute
  ApiDemoNamesRoute: typeof ApiDemoNamesRoute
  AuthRoute: typeof AuthRouteWithChildren
  DemoTanstackQueryRoute: typeof DemoTanstackQueryRoute
  DemoStartApiRequestRoute: typeof DemoStartApiRequestRoute
  DemoStartServerFuncsRoute: typeof DemoStartServerFuncsRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/auth': {
      id: '/auth'
      path: '/auth'
      fullPath: '/auth'
      preLoaderRoute: typeof AuthRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/demo/tanstack-query': {
      id: '/demo/tanstack-query'
      path: '/demo/tanstack-query'
      fullPath: '/demo/tanstack-query'
      preLoaderRoute: typeof DemoTanstackQueryRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/auth/_authLayout': {
      id: '/auth/_authLayout'
      path: '/auth'
      fullPath: '/auth'
      preLoaderRoute: typeof AuthAuthLayoutRouteImport
      parentRoute: typeof AuthRoute
    }
    '/api/demo-names': {
      id: '/api/demo-names'
      path: '/api/demo-names'
      fullPath: '/api/demo-names'
      preLoaderRoute: typeof ApiDemoNamesRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/api/ai': {
      id: '/api/ai'
      path: '/api/ai'
      fullPath: '/api/ai'
      preLoaderRoute: typeof ApiAiRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/demo/start/server-funcs': {
      id: '/demo/start/server-funcs'
      path: '/demo/start/server-funcs'
      fullPath: '/demo/start/server-funcs'
      preLoaderRoute: typeof DemoStartServerFuncsRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/demo/start/api-request': {
      id: '/demo/start/api-request'
      path: '/demo/start/api-request'
      fullPath: '/demo/start/api-request'
      preLoaderRoute: typeof DemoStartApiRequestRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/auth/_authLayout/register': {
      id: '/auth/_authLayout/register'
      path: '/register'
      fullPath: '/auth/register'
      preLoaderRoute: typeof AuthAuthLayoutRegisterRouteImport
      parentRoute: typeof AuthAuthLayoutRoute
    }
    '/auth/_authLayout/login': {
      id: '/auth/_authLayout/login'
      path: '/login'
      fullPath: '/auth/login'
      preLoaderRoute: typeof AuthAuthLayoutLoginRouteImport
      parentRoute: typeof AuthAuthLayoutRoute
    }
    '/auth/_authLayout/forgot-password': {
      id: '/auth/_authLayout/forgot-password'
      path: '/forgot-password'
      fullPath: '/auth/forgot-password'
      preLoaderRoute: typeof AuthAuthLayoutForgotPasswordRouteImport
      parentRoute: typeof AuthAuthLayoutRoute
    }
    '/auth/_authLayout/creator': {
      id: '/auth/_authLayout/creator'
      path: '/creator'
      fullPath: '/auth/creator'
      preLoaderRoute: typeof AuthAuthLayoutCreatorRouteImport
      parentRoute: typeof AuthAuthLayoutRoute
    }
  }
}

interface AuthAuthLayoutRouteChildren {
  AuthAuthLayoutCreatorRoute: typeof AuthAuthLayoutCreatorRoute
  AuthAuthLayoutForgotPasswordRoute: typeof AuthAuthLayoutForgotPasswordRoute
  AuthAuthLayoutLoginRoute: typeof AuthAuthLayoutLoginRoute
  AuthAuthLayoutRegisterRoute: typeof AuthAuthLayoutRegisterRoute
}

const AuthAuthLayoutRouteChildren: AuthAuthLayoutRouteChildren = {
  AuthAuthLayoutCreatorRoute: AuthAuthLayoutCreatorRoute,
  AuthAuthLayoutForgotPasswordRoute: AuthAuthLayoutForgotPasswordRoute,
  AuthAuthLayoutLoginRoute: AuthAuthLayoutLoginRoute,
  AuthAuthLayoutRegisterRoute: AuthAuthLayoutRegisterRoute,
}

const AuthAuthLayoutRouteWithChildren = AuthAuthLayoutRoute._addFileChildren(
  AuthAuthLayoutRouteChildren,
)

interface AuthRouteChildren {
  AuthAuthLayoutRoute: typeof AuthAuthLayoutRouteWithChildren
}

const AuthRouteChildren: AuthRouteChildren = {
  AuthAuthLayoutRoute: AuthAuthLayoutRouteWithChildren,
}

const AuthRouteWithChildren = AuthRoute._addFileChildren(AuthRouteChildren)

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  ApiAiRoute: ApiAiRoute,
  ApiDemoNamesRoute: ApiDemoNamesRoute,
  AuthRoute: AuthRouteWithChildren,
  DemoTanstackQueryRoute: DemoTanstackQueryRoute,
  DemoStartApiRequestRoute: DemoStartApiRequestRoute,
  DemoStartServerFuncsRoute: DemoStartServerFuncsRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

import type { getRouter } from './router.tsx'
import type { createStart } from '@tanstack/react-start'
declare module '@tanstack/react-start' {
  interface Register {
    router: Awaited<ReturnType<typeof getRouter>>
  }
}
